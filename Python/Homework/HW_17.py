# 1. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–≥–æ –≤ —Ñ—É–Ω–∫—Ü–∏—é modify_list,
# –∫–æ—Ç–æ—Ä–∞—è –∏–∑–º–µ–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —É–º–Ω–æ–∂–∏—Ç—å –Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞ 2, –∞ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ 2.
# –í—ã–≤–µ–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω. –û–±—ä—è—Å–Ω–∏—Ç–µ, –ø–æ—á–µ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–∞–∫
# —Ä–∞–±–æ—Ç–∞—é—Ç –∏–∑–º–µ–Ω—è–µ–º—ã–µ –∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
# –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
# –í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏: 1 2 3 4 5
# –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª: [2, 1, 6, 2, 10]

# def modify_list(a:list) ->list:
#     ''' this function modifies a list whose elements are prime numbers according to the following rule
#         :an even number will be divided by two
#         :an odd number will be multiplied by two'''
#     return [int(i)*2 if int(i) % 2 else int(int(i)/2) for i in a]
#
# print(modify_list.__doc__)
# print(modify_list(input().split()))



# 2. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
# –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∏—Ö –≤ —Ñ—É–Ω–∫—Ü–∏—é calculate_sum, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä * –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤ —Ñ—É–Ω–∫—Ü–∏—é. –í—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω.
# –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
# –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏: 1 2 3 4 5
# –°—É–º–º–∞ —á–∏—Å–µ–ª: 15

# def calculate_sum(*args):
#     '''if at any point in your life you consider yourself
#     useless - think about this function!'''
#     return sum(args)

# a = (int(i) for i in input().split())
# print(calculate_sum(*a))
# print(calculate_sum.__doc__)

############ –ö–∞–∑–∞–ª–æ—Å—å –±—ã, –∑–∞—á–µ–º? –ï—Å–ª–∏ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫:
# print(sum((int(i) for i in input().split())), 'üòé')

############ –ò–ª–∏ —Ç–∞–∫:
# print(sum(map(int, input().split())), 'üòé')

############ –ù—É –∏–ª–∏ –≤–æ—Ç —Ç–∞–∫:
# from functools import reduce
# print(reduce(lambda x, y: int(x) + int(y), input().split(), 0), 'üòé')

############ –ù—É –∏ –∫–æ–Ω–µ—á–Ω–æ –∂–µ, –ø–æ—á–µ–º—É –±—ã –Ω–µ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫:
# def recursive_sum(bdsm):
#     total = 0
#     for elem in bdsm:
#         if isinstance(elem, list):
#             total += recursive_sum(elem)
#         else:
#             total += elem
#     return total
#
# my_list = [12, [13, [53, 632], 6], [2342341, [98, 3123, [2432, [1, 1, 2, 3, [4, 4, [4, 4, [4, 4, [4, 4, [4, 4, [4, 4, [4, 4, [4, 4]]]]]]]]], 4324]]]]
# print(recursive_sum(my_list), 'üòé')





